<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
 	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- 配置注解扫描所在的包 -->
    <context:component-scan base-package="com.plantsys">
        <!-- 代表包含如下注解的类,都交给spring容器管理 -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Component" />
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Repository" />
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Service" />
    </context:component-scan>

    <!-- 加载配数据源配置文件 db.properties -->
    <context:property-placeholder location="classpath:db.properties" />

    <!-- 配置 C3P0 数据源 -->

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${datasource.connection.driver_class}"/>
        <property name="jdbcUrl" value="${datasource.connection.url}"/>
        <property name="user" value="${datasource.connection.username}"/>
        <property name="password" value="${datasource.connection.password}"/>
    </bean>

    <!-- 事务管理器 （JDBC） -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 启动声明式事务驱动 -->
    <tx:annotation-driven transaction-manager="transactionManager" />


    <!-- spring 通过 sqlSessionFactoryBean 获取 sqlSessionFactory 工厂类 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>

        <!--配置分页助手-->
        <property name="plugins">
            <array>
                <!-- 引入插件类型 -->
                <bean class="com.github.pagehelper.PageInterceptor">
                    <!-- 指定使用的数据库-->
                    <property name="properties">
                        <!--因为分页插件支持多种数据库,需指明当前所用数据库 ,helperDialect  mysql数据库(方言)-->
                        <props>
                            <prop key="helperDialect">mysql</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>


        <!-- 扫描 po 包，使用别名 -->
        <property name="typeAliasesPackage" value="com.plantsys.entity"></property>
        <!-- 扫描映射文件 -->
        <property name="mapperLocations" value="classpath:/mapper/*.xml"></property>
    </bean>

    <!-- 配置扫描 dao 包，动态实现 dao 接口，注入到 spring 容器中, 这里的 dao 实际上就是 Mapper接口类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.plantsys.mapper" />
        <!-- 注意使用 sqlSessionFactoryBeanName 避免出现spring 扫描组件失效问题 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

</beans>
